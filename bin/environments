environment () {

	ENVROOT="${ENVROOT:-$(cd ~; pwd)/environments}"

  cfg='.config'
  env='env'
	envname=""
  projdir=""

	declare -i create_project=0
	declare -i stop=0

  usage="
environment: [-h] [-n] [-p {project) | {name}]

parameters:
-h | --help    - print this text
-n | --new     - create a new environment with given name (optionally w/in a project)
-p | --profile - use '{profile}' instead of the default profile in the environment file.

"

  if [ $# -eq 0 ]; then
    printf "environment: %s\n\n" $(basename $(pwd))
    printf "\n%s\n" "$usage"
  else
    while [[ $# -gt 0 ]]; do
      case "$1" in
        -h | --help)
          printf "usage: \n%s\n" "$usage"
          stop=1 ;;
        -n | --new)
          create_project=1 ;;
        -p | --project)
					projname="$(basename $2)"
          projdir="$2"
					shift ;;
        *)
          envname="$1" ;;
      esac
      shift
    done
  fi

	if [ -z "$projname" ]; then
		projname="$envname"
		projdir="$ENVROOT/$envname"
	fi

  projcfg="$projdir/$cfg"
  projenv="$projcfg/$env"

  #pre config
  if [ -d "$projenv" ]; then
    [ -f "$projenv/activate" ] && . "$projenv/activate"
  fi

  # config (evaluate configs). CONSIDER: could use 'runparts' for this.
	# right now there are just three groups:
	#   !(name) - are all executed first
	#   (name)  - are executed next
	#   ~(name) - are all executed last
  cd "$projdir"
  for cf in "$projenv"/\!$projname.* ; do
    [ -e "$cf" ] && printf "loading %s...\n" $(basename $cf) && . "$cf"
  done
  for cf in "$projenv"/$projname.* ; do
    if [ -e "$cf" ] && [[ ${cf:0:1} != \! ]] && [[ ${cf:0:1} != \~ ]] ; then
      printf "loading %s...\n" $(basename $cf)
      . "$cf"
    fi
  done
  for cf in "$projenv"/\~$projnamet.* ; do
    [ -e "$cf" ] && printf "loading %s...\n" $(basename $cf) && . "$cf"
  done

	# path
  export OLDPATH=$PATH
  if [ -e "$projdir/bin" ]; then
    export PATH="$projdir/bin:$PATH"
  fi
  if [ -n "$ADDPATH" ]; then
    export PATH="$ADDPATH:$PATH"
	fi
}
declare -xf environments
