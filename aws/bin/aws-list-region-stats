#!/bin/bash

echo " "
echo "Instance Counts by Region:"
echo '------------------------------------------'

function usage() {
	echo "$0: list aws instance region allocation statistics"
	echo ""
	echo "usage:"
	echo "  -h | --help"
	echo "  -p | --profile <profile>"
	echo ""
}

function println() {
	if [[ $# = 0 ]] ; then
		echo ""
	else
		fmt=$1 && shift
		printf "${fmt}" $*
	fi
}


while [[ $# -gt 0 ]] ; do
	case "$1" in
	-h | --help)
		usage; exit;;
	-p | --profile)
		PROFILE=1; shift; PROFUSER="$1"; args=1 ;;
	esac
	shift
done

println "%16.16s: %5.5s %5.5s %5.5s %5.5s %5.5s\n" "region" "run" "stop" "term" "other" "total"

for region in `aws-list-regions | awk '{print $1}'` ; do

	if [[ $args != 1 ]] ; then
		aws ec2 describe-instances --profile "$PROFUSER" --region ${region} --query 'Reservations[].Instances[].[LaunchTime, Placement.AvailabilityZone, State.Name, InstanceId, ImageId, InstanceType, SecurityGroups[0].GroupName, KeyName, Tags[?Key==`Prefix`].Value | [0]]' --output text > ~/.temp/ec2stats.txt
	else
		aws ec2 describe-instances --region ${region} --query 'Reservations[].Instances[].[LaunchTime, Placement.AvailabilityZone, State.Name, InstanceId, ImageId, InstanceType, SecurityGroups[0].GroupName, KeyName, Tags[?Key==`Prefix`].Value | [0]]' --output text > ~/.temp/ec2stats.txt
	fi

	c_running=`cat ~/.temp/ec2stats.txt | grep running | wc -l`
	c_stopped=`cat ~/.temp/ec2stats.txt | grep stopped | wc -l`
	c_terminated=`cat ~/.temp/ec2stats.txt | grep terminated | wc -l`
	c_other=`cat ~/.temp/ec2stats.txt | egrep -v 'running|stopped|terminated' | wc -l`
	c_total=`cat ~/.temp/ec2stats.txt | wc -l`

	println "%16.16s: %5d %5d %5d %5d %5d\n" $region $c_running $c_stopped $c_terminated $c_other $c_total
done

println
